# -*- coding: utf-8 -*-
"""Data Cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ua6FOvoef5ZNLsPP9Dztd-oNXXllyWN1

### Importe del dataset

---

Dataset sacado de kaggle ["Uber Data Analytics Dashboard"](https://www.kaggle.com/datasets/yashdevladdha/uber-ride-analytics-dashboard)
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("yashdevladdha/uber-ride-analytics-dashboard")

print("Path to dataset files:", path)

import os
import pandas as pd

os.listdir(path)
df = pd.read_csv(os.path.join(path, "ncr_ride_bookings.csv"))

"""### Visualización de los primeros 5 registros

---
"""

df.head(5)

"""Se puede ver que hay varios registros con valores nulos, entonces nos podemos concentrar en registros que no contengan valores nulos. Para eso veamos cuantos valores nulos hay en cada columan.

### Limpieza de datos

---
"""

df.info()

"""Antes de empezar, primero vemos si hay valores duplicados."""

print(df.duplicated().sum())

"""No hay valores duplicados! Por lo que seguimos con la limpieza.

#### Limpieza de filas

---

Al ver los nombres de todas las columnas, si tomamos como referencia 'Booking Status', podemos ver lo siguiente:
"""

df['Booking Status'].value_counts()

"""Podemos notar que el Status de 'Completed' son los que tienen más viajes, entonces para este análisis se usarán únicamente los registros de 'Completed'. Para ello eliminaremos los demás status"""

df.drop(df[df['Booking Status'] == 'Cancelled by Driver'].index, inplace=True)

df.drop(df[df['Booking Status'] == 'No Driver Found'].index, inplace=True)

df.drop(df[df['Booking Status'] == 'Cancelled by Customer'].index, inplace=True)

df.drop(df[df['Booking Status'] == 'Incomplete'].index, inplace=True)

"""Volvemos a ver los primeros registros"""

df.head()

"""Podemos ver que ya los primeros 5 tienen status de 'Completed', sin embargo para asegurar, podemos ver los valores únicos que tiene."""

df['Booking Status'].unique()

df['Booking Status'].value_counts()

"""Ya podemos ver que tenemos un dataframe centrado en viajes completados.

#### Limpieza de columnas

---

Sigue eliminar las columnas que no tengan relación con los viajes completados. Estas son las que por descarte podemos saber, ya que se tratan sobre viajes cancelados o incompletos:
*   Cancelled Rides by Customer
*   Reason for cancelling by Customer
*   Cancelled Rides by Driver
*   Driver Cancellation Reason
*   Incomplete Rides
*   Incomplete Rides Reason
"""

columnas_a_eliminar = [
    'Cancelled Rides by Customer',
    'Reason for cancelling by Customer',
    'Cancelled Rides by Driver',
    'Driver Cancellation Reason',
    'Incomplete Rides',
    'Incomplete Rides Reason'
]

df.drop(columns=columnas_a_eliminar, inplace=True)
print(f"Columnas eliminadas")

"""Volvemos a mostrar en pequeño resumen del dataframe."""

df.info()

"""Ya podemos notar que nos quedamos únicamente con registros que no tengan valores nulos."""

df.head()

"""#### Conversión de fechas a datetime

---

Otra cosa a notar es que tanto date como time son del tipo object, lo cual no es conveniente al trabajar con fechas y tiempos, por lo que se convertirá a tipo datetime.
"""

df['Datetime'] = pd.to_datetime(df['Date'] + ' ' + df['Time'], errors='coerce')
df.drop(['Date', 'Time'], axis=1, inplace=True)
df.info()

"""Terminamos la limpieza de datos con esto, ya que ahora si logramos ver al final tenemos datetime como datetime.

### Descarga del CSV limpio

---
"""

df.to_csv('datos_limpios.csv', index=False)