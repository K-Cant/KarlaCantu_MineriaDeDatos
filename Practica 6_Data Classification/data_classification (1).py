# -*- coding: utf-8 -*-
"""Data Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ceEs0MULn5gt41Hpx2IOEPdrosX0eRxa

## Práctica 6: Data Classification

Cree un modelo utilizando los k vecinos más cercanos y pruébelo.

### Lectura del CSV
"""

import pandas as pd

df = pd.read_csv('datos_limpios.csv')
print(df.info())

"""### KNN"""

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import LabelEncoder

from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report

X = df.drop(columns={'Booking ID', 'Booking Status', 'Datetime'} )
y = df['Booking Status']

le = LabelEncoder()
X = X.apply(lambda col: le.fit_transform(col.astype(str)) if col.dtypes == 'object' else col)
y = le.fit_transform(y)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

knn = KNeighborsClassifier(n_neighbors=50)
knn.fit(X_train, y_train)

y_pred = knn.predict(X_test)

print(f"Accuracy: {accuracy_score(y_test, y_pred):.4f}")
print(f"\nClassification Report: \n{classification_report(y_test, y_pred)}")

"""O es el mejor modelo del mundo o hay un caso severo de overfitting"""